{"version":3,"sources":["components/Bar.js","components/Filters.js","components/Gallery.js","components/QueueItem.js","components/Queue.js","credentials.js","App.js","serviceWorker.js","index.js"],"names":["Bar","react_default","a","createElement","className","Component","Filters","toggleFilterOption","e","console","log","target","value","temp","_this","props","languages","index","indexOf","splice","push","setAppState","subtitlesOnly","_this2","this","_this$props","filters","dictionary","other","categories","forEach","filter","filterIndex","pills","Object","keys","filterOption","selected","includes","key","onClick","String","prototype","trunc","n","length","substr","Gallery","componentDidUpdate","prevProp","prevState","snapshot","db","fetchPrograms","collection","get","then","querySnapshot","programs","program","id","data","liveTimes","hasOwnProperty","time","startTime","endTime","title","timezone","name","previewUrl","cover","language","hasSubtitles","description","dict","zh-tw","min-tw","sign","en-us","th","vi","items","children","item","langIndex","alt","src","map","concat","QueueItem","handleClick","videoId","image","channel","Queue","state","customVidUrlIsValid","url","preview","undefined","queue","componentDidMount","window","fbAsyncInit","FB","init","appId","cookie","xfbml","version","bind","assertThisInitialized","d","s","js","fjs","getElementsByTagName","getElementById","parentNode","insertBefore","document","enqueue","joined","setState","res","customVideoUrlUpdated","validURL","segueTimeLimitUpdated","parseInt","segueTimeLimit","fetchVideoDetails","api","access_token","response","error","site_name","replace","handleItemClick","str","RegExp","test","queueItems","vid","components_QueueItem","onChange","placeholder","disabled","apiKey","firebase","require","App","form","_i","_Object$entries","entries","_ref3","_ref2","slicedToArray","defineProperty","firebaseConfig","authDomain","databaseURL","projectId","storageBucket","initializeApp","firestore","components_Bar","components_Queue","components_Filters","setFilters","components_Gallery","some","r","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f9c2f95.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass Bar extends Component {\n\n    render() {\n        return (\n            <div className=\"bar\">\n                <div>\n                    <h1 className=\"bar__title\">好新聞連播網</h1>\n                    <h2 className=\"bar__subtitle\">直播時段放直播，沒有直播放最新\u001d，新聞之間播串場影片</h2>\n                </div>\n                <button className=\"button bar__profile\"></button>\n            </div>\n        )\n    }\n}\n\nexport default Bar;","import React, {Component} from \"react\";\n\nclass Filters extends Component {\n\n    toggleFilterOption = e => {\n        console.log(\"toggle filter\", e.target.value);\n        if (e.target.value !== \"subtitlesOnly\"){\n            var temp = this.props.languages;\n            var index = temp.indexOf(e.target.value);\n            if (index !== -1) {\n                temp.splice(index, 1);\n            } else {\n                temp.push(e.target.value);\n            };\n            this.props.setAppState({languages: temp});    \n        } else {\n            this.props.setAppState({subtitlesOnly: !this.props.subtitlesOnly});\n        }\n    }\n\n    render(){\n\n        const { filters, languages, subtitlesOnly } = this.props;\n        const dictionary = {\n            \"languages\": \"語言\",\n            \"other\": \"特殊選項\"\n        }\n\n        var categories = [];\n\n        \n\n        filters.forEach((filter, filterIndex) => {\n            var pills = []\n            filter[Object.keys(filter)[0]].forEach((filterOption, index) => {\n                var selected = false;\n                if (filterIndex === 0 && subtitlesOnly) {\n                    selected = true;\n                } else if (filterIndex === 1 && languages.includes(filterOption.value)) {\n                    selected = true;    \n                }\n                pills.push(\n                    <button key={index} className={\"button pill\" + (selected ? \" pill--selected\" : \"\")} value={filterOption.value} onClick={this.toggleFilterOption}>\n                        {filterOption.key}\n                    </button>\n                )\n            })\n            categories.push(\n                <div key={filterIndex} className=\"filter\">\n                    <h3 className=\"filter__category\">{dictionary[Object.keys(filter)[0]]}</h3>\n                    <div className=\"pills pills--bordered\">\n                        {pills}\n                    </div>\n                </div>\n            )\n        })\n\n        return (\n            <div className=\"filters\">\n                {categories}\n            </div>\n        )\n    }\n}\n\nexport default Filters;","import React, {Component} from \"react\"\n\nString.prototype.trunc = String.prototype.trunc ||\n    function(n){\n        return (this.length > n) ? this.substr(0, n-1) + '...' : this;\n    };\n\nclass Gallery extends Component {\n\n    componentDidUpdate = (prevProp, prevState, snapshot) => {\n        if (typeof(this.props.db) != 'undefined' && typeof(prevProp.db) == 'undefined') {\n            console.log('db loaded', this.props.db);\n          this.fetchPrograms();\n        }\n    }\n\n    fetchPrograms = () => {\n        console.log('gallery mounted')\n        let db = this.props.db;\n        var programsRef = db.collection('programs');\n        programsRef.get().then((querySnapshot) => {\n            let programs = [];\n            querySnapshot.forEach(function(program) {\n                // doc.data() is never undefined for query doc snapshots\n                console.log(program.id, \" => \", program.data());\n                let data = program.data();\n                let liveTimes = [];\n\n                if (data.hasOwnProperty('liveTimes')){\n                    data.liveTimes.forEach((time) => {\n                        liveTimes.push({\n                            startTime: time.startTime,\n                            endTime: time.endTime,\n                            title: time.title,\n                            timezone: time.timezone,\n                        })\n                    })\n                }\n                \n                programs.push({\n                    name: data.title,\n                    previewUrl: data.cover,\n                    languages: [data.language],\n                    hasSubtitles: data.hasSubtitles,\n                    description: '',\n                    liveTimes: liveTimes,\n                });\n            });\n            this.props.setAppState({\n                programs: programs\n            }, () => {\n                console.log('loaded programs');\n            });\n        });\n    }\n\n\n    render(){\n\n        const dict = {\n            'zh-tw': \"華語\",\n            'min-tw': \"台語\",\n            'sign': \"手語\",\n            'en-us': \"English\",\n            'th': \"ภาษาไทย\",\n            'id': \"Indonesian\",\n            'vi': \"tiếng Việt\"\n        }\n\n        const items = typeof(this.props.programs) != 'null' ? this.props.programs : [];\n\n        var children = [];\n\n        items.forEach((item, index) => {\n\n            var pills = [];\n\n            item.languages.forEach((language, langIndex) => {\n                pills.push(\n                    <button key={\"lang\" + langIndex} className=\"pill pill--small\" value={language}>{dict[language]}</button>\n                )\n            })\n            \n            if (item.hasSubtitles) {\n                pills.push(\n                    <button key={index} className=\"pill pill--small\" value={\"subtitles\"}>有字幕</button>\n                )\n            }\n\n            children.push(\n                <div key={index} className=\"gallery__item\">\n                    <img className=\"gallery__item__preview\" alt={item.name} src={item.previewUrl} />\n                    <h3 className=\"gallery__item__title\">{item.name}</h3>\n                    <div className=\"gallery__item__body\">\n                        {\n                            item.liveTimes.map(time => <div key={`${time.title}-${time.startTime}`}>{`${time.title}, ${time.startTime}~${time.endTime}`}</div>)\n                        }\n                    </div>\n                    <div className=\"pills\">\n                        {pills}\n                    </div>\n                </div>\n            )\n        })\n\n        return (\n            <div className=\"gallery\">\n                {children}\n            </div>\n        )\n    }\n}\n\nexport default Gallery;","\nimport React, {Component} from \"react\";\n\nclass QueueItem extends Component {\n\n  render() {\n    const { item, handleClick } = this.props;\n    return (\n      <li value={item.videoId} className=\"queue__item row\" onClick={handleClick}>\n        <div className=\"queue__item__thumbnail\">\n          <img alt='影片預覽圖片' src={!item.hasOwnProperty(\"image\") || item.image === \"\" ? '' : item.image} />\n        </div>\n        <div className=\"texts column\">\n            <h5>{item.title}</h5>\n            <p>{item.channel}</p>\n            <p>{item.description}</p>\n        </div>\n      </li>\n)\n  }\n}\n\nexport default QueueItem;","import React, {Component} from \"react\";\nimport QueueItem from \"./QueueItem\";\n\nclass Queue extends Component {\n\n    state = {\n        customVidUrlIsValid: false,\n        url: \"\",\n        preview: undefined,\n        queue: [],\n    }\n\n    componentDidMount = () => {\n        window.fbAsyncInit = function() {\n          window.FB.init({\n            appId      : '585832711939369',\n            cookie     : true,  // enable cookies to allow the server to access\n                              // the session\n            xfbml      : true,  // parse social plugins on this page\n            version    : 'v2.1' // use version 2.1\n          });\n      \n          // Now that we've initialized the JavaScript SDK, we call\n          // FB.getLoginStatus().  This function gets the state of the\n          // person visiting this page and can return one of three states to\n          // the callback you provide.  They can be:\n          //\n          // 1. Logged into your app ('connected')\n          // 2. Logged into Facebook, but not your app ('not_authorized')\n          // 3. Not logged into Facebook and can't tell if they are logged into\n          //    your app or not.\n          //\n          // These three cases are handled in the callback function.\n        }.bind(this);\n      \n        // Load the SDK asynchronously\n        (function(d, s, id) {\n          var js, fjs = d.getElementsByTagName(s)[0];\n          if (d.getElementById(id)) return;\n          js = d.createElement(s); js.id = id;\n          js.src = \"//connect.facebook.net/en_US/sdk.js\";\n          fjs.parentNode.insertBefore(js, fjs);\n        }(document, 'script', 'facebook-jssdk'));\n    }\n      \n\n    validURL(str) {\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n          '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n          '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n          '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n          '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n          '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n        return !!pattern.test(str);\n    }\n\n    enqueue = () => {\n        let joined = this.state.queue.concat(this.state.preview);\n        this.setState({\n            queue: joined,\n        }, (res) => {\n            console.log(\"queue\", this.state.queue);\n            this.setState({\n                preview: undefined,\n                url: ''\n            })\n        })\n    }\n\n    customVideoUrlUpdated = (e) => {\n        console.log(`valid url: ${this.validURL(e.target.value)}`);\n        var value = e.target.value;\n        if (this.validURL(value)) {\n            this.setState({customVidUrlIsValid: true, url: value});\n        } else {\n            this.setState({customVidUrlIsValid: false});\n        }\n    }\n\n    segueTimeLimitUpdated = (e) => {\n        var value = parseInt(e.target.value);\n        console.log('selected', value);\n        this.props.setAppState({segueTimeLimit: value});\n    }\n\n    fetchVideoDetails = () => {\n        window.FB.api(\n            \"/\",\n            {\n                id: this.state.url,\n                access_token: \"585832711939369|NB3IYtyjITLZ_q5TR61QYUzzzRA\"\n            },\n            function (response) {\n                if (response && !response.error) {\n                    console.log(\"response\", response);\n                    if (typeof(response.title) === \"undefined\") {\n                        window.FB.api(\n                            \"/\",\n                            \"post\",\n                            {\n                                id: this.state.url,\n                                access_token: \"585832711939369|NB3IYtyjITLZ_q5TR61QYUzzzRA\"\n                            },\n                            function (response) {\n                              if (response && !response.error) {\n                                /* handle the result */\n                                // update preview area with new image and description\n                                console.log(response);\n                                this.setState({\n                                    preview: {\n                                        title: response.title,\n                                        image: response.image[0].url,\n                                        description: response.description,\n                                        channel: response.site_name,\n                                        videoId: this.state.url.replace(\"https://www.youtube.com/watch?v=\", \"\").substr(0, 11)\n                                    }\n                                });\n                                this.enqueue();\n                              }\n                            }.bind(this)\n                        );\n                    } else {\n                        this.setState({\n                            preview: {\n                                title: response.title,\n                                image: response.image[0].url,\n                                description: response.description.substr(0, 60),\n                                channel: response.site_name,\n                                videoId: this.state.url.replace(\"https://www.youtube.com/watch?v=\", \"\").substr(0, 11)\n                            }\n                        });\n                    }                \n                }\n            }.bind(this)\n        )\n    }\n\n    handleItemClick = (e) => {\n        console.log(e.target);\n    }\n\n    render(){\n\n        let queueItems = [];\n\n        this.state.queue.forEach((vid) => {\n            queueItems.push(\n                <QueueItem key={vid.videoId} item={vid} handleClick={this.handleItemClick} />\n            )\n        })\n        return (\n            <div>\n                <div className=\"column custom-vid\">\n                    <div className=\"controls\">\n                        <div className=\"textbox-container\">\n                            <input onChange={this.customVideoUrlUpdated} className=\"textbox textbox--borderless textbox--url\" placeholder=\"串場影片之 YouTube 連結...\" />\n                            <button id=\"search-vid\" disabled={!this.state.customVidUrlIsValid} onClick={this.fetchVideoDetails}>加入</button>\n                        </div>\n                        <div className=\"row picker-container\">\n                            <label>每段串場時間：</label>\n                            <select className=\"\" onChange={this.segueTimeLimitUpdated}>\n                                <option value='-1'>不限</option>\n                                <option value='10'>10分</option>\n                                <option value='30'>30分</option>\n                            </select>\n                        </div>\n                    </div>\n                    <ul className=\"queue\">\n                        {queueItems}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Queue;","let apiKey = 'AIzaSyBKEeohxlGn9LRyKDA2V1lju9xKB66sSEw';\nexport default apiKey;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Bar from './components/Bar';\nimport Filters from \"./components/Filters\";\nimport Gallery from \"./components/Gallery\";\nimport Queue from \"./components/Queue\";\nimport apiKey from \"./credentials\";\n\nconst firebase = require(\"firebase\");\n// Required for side-effects\nrequire(\"firebase/firestore\");\n\nclass App extends Component {\n\n  state = {\n    languages: [\"zh-tw\", \"min-tw\", \"sign\", \"en-us\", \"vi\", \"id\", \"th\"],\n    subtitlesOnly: false,\n    segueTimeLimit: -1,\n    db: undefined,\n    programs: [],\n  }\n\n  setAppState = form => {\n    for (const [key, value] of Object.entries(form)) {\n      this.setState({ [key]: value });\n    }\n  };\n\n  componentDidMount = () => {\n    // Initialize Cloud Firestore through Firebase\n    let firebaseConfig = {\n      apiKey: apiKey,\n      authDomain: \"better-news-235900.firebaseapp.com\",\n      databaseURL: \"https://better-news-235900.firebaseio.com\",\n      projectId: \"better-news-235900\",\n      storageBucket: \"better-news-235900.appspot.com\",\n    };\n  \n    firebase.initializeApp(firebaseConfig);\n\n    var db = firebase.firestore();\n\n    this.setState({db: db}, function(){\n      console.log(this.state.db);\n    });\n  }\n\n\n  render(){\n\n    const filters = [\n      {\n        other: [\n          {\n            key: \"以有字幕節目為主\",\n            value: \"subtitlesOnly\"\n          },\n        ]\n      },\n      {\n        languages: [\n          {\n            key: \"華語\",\n            value: \"zh-tw\"\n          },\n          {\n            key: \"台語\",\n            value: \"min-tw\"\n          },\n          {\n            key: \"手語\",\n            value: \"sign\"\n          },\n          {\n            key: \"English\",\n            value: \"en-us\"\n          },\n          {\n            key: \"ภาษาไทย\",\n            value: \"th\"\n          },\n          {\n            key: \"Indonesian\",\n            value: \"id\"\n          },\n          {\n            key: \"tiếng Việt\",\n            value: \"vi\"\n          }\n        ]\n      }\n    ];\n  \n    return (\n      <div className=\"App\">\n        <Bar />\n        <div className=\"container\">\n          <div className=\"side\">\n            <h3 className=\"side__title\">\n              串場影片清單\n            </h3>\n            <Queue setAppState={this.setAppState} />\n          </div>          \n          <div className=\"main\">\n            <Filters setAppState={this.setAppState} languages={this.state.languages} subtitlesOnly={this.state.subtitlesOnly} filters={filters} setFilters={this.setFilters} />\n            <Gallery db={this.state.db} setAppState={this.setAppState} programs={this.state.programs.filter(item => ((this.state.subtitlesOnly ? item.hasSubtitles : true) && item.languages.some(r => this.state.languages.includes(r))))} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"./App.scss\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}